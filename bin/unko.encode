#!/bin/bash

UNKO_OCT="„ÅÜ„Çì„Åì„Ç¶„É≥„Ç≥üí©üëë"
usage() {
  echo "Usage: $0 [OPTION] [FILE]"
  echo "Unko encode or decode FILE, or standard input to standard output."
  echo "With no FILE, or when FILE is -, read standard input."
  echo "  -d : decode data"
  echo "  -h : display this help and exit"
}

encode() {
  od -b -v -An |
    sed -e "y/01234567/$UNKO_OCT/" |
    tr -d ' \n'
  echo
}

decode() {
  printf '%b' "$(
    sed "s/[^$UNKO_OCT]//g" |
      sed \
        -e "s/${UNKO_OCT:0:1}/0/g" \
        -e "s/${UNKO_OCT:1:1}/1/g" \
        -e "s/${UNKO_OCT:2:1}/2/g" \
        -e "s/${UNKO_OCT:3:1}/3/g" \
        -e "s/${UNKO_OCT:4:1}/4/g" \
        -e "s/${UNKO_OCT:5:1}/5/g" \
        -e "s/${UNKO_OCT:6:1}/6/g" \
        -e "s/${UNKO_OCT:7:1}/7/g" |
      sed 's/.../\\&/g'
  )"
}

EXEC_COMMAND="encode"
FILE="-"

for arg in "$@"; do
  case "$arg" in
    "-h" | "--help")
      usage
      exit 0
      ;;
    "-d" | "--decode") EXEC_COMMAND="decode" ;;
    *) FILE="$arg" ;;
  esac
done

if [ "$FILE" = - ]; then
  "$EXEC_COMMAND"
else
  "$EXEC_COMMAND" < "$FILE"
fi

exit 0
